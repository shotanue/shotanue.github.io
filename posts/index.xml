<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on @shotanue</title>
		<link>https://shotanue.github.io/posts/</link>
		<description>Recent content in Posts on @shotanue</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>ja-JP</language>
		<lastBuildDate>Mon, 04 Nov 2019 19:10:38 +0900</lastBuildDate>
		<atom:link href="https://shotanue.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Alpine Composer</title>
			<link>https://shotanue.github.io/posts/alpine-composer/</link>
			<pubDate>Mon, 04 Nov 2019 19:10:38 +0900</pubDate>
			
			<guid>https://shotanue.github.io/posts/alpine-composer/</guid>
			<description>コンポーザーをalpineに楽に入れたい。 (※alpine以外の環境にこの方法で入れて動くかは不明) 結論としては、こんな感じにすればOK FROM alpine:3.10.3</description>
			<content type="html"><![CDATA[

<p>コンポーザーをalpineに楽に入れたい。
(※alpine以外の環境にこの方法で入れて動くかは不明)</p>

<p>結論としては、こんな感じにすればOK</p>

<pre><code class="language-bash">FROM alpine:3.10.3

ENV COMPOSER_HOME /composer
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV PATH /composer/vendor/bin:$PATH

COPY --from=composer:1.9.1 /usr/bin/composer /usr/bin/composer
</code></pre>

<h2 id="解説">解説</h2>

<p>composerは公式イメージがあるので、ここから実行ファイルだけ落としてくれば動くみたい。<br />
/usr/binとかに入れておく。</p>

<h4 id="composer-allow-superuser-1"><code>COMPOSER_ALLOW_SUPERUSER 1</code></h4>

<p>これを指定すると、composerをSUPER USERで動かしても怒らなくなる。<br />
alpineはそのままだとSUPER USERで動くので指定している。<br />
実行ユーザーを設定していたりすれば不要なんだろうと思う。</p>

<h4 id="composer-home"><code>COMPOSER_HOME</code></h4>

<p>指定したディレクトリにcomposerそのものが動作するのに使用するファイル、キャッシュ類が格納される。</p>

<h2 id="応用">応用</h2>

<p>ユースケースとして、デプロイ用のイメージでcomposer installをしたいが、アプリ動作時はcomposerが不要になる場合は下記のようにするとイメージが綺麗に保てるのでは(と思っている)。</p>

<pre><code class="language-bash">FROM php:latest

COPY --from=composer:1.9.1 /usr/bin/composer /usr/bin/composer

WORKDIR /var/some-application
COPY ./some-application .

RUN composer install --no-dev \
 &amp;&amp; composer some-application-set-up-script \
 &amp;&amp; rm -rf /usr/bin/composer /composer
</code></pre>
]]></content>
		</item>
		
		<item>
			<title>Abc 142</title>
			<link>https://shotanue.github.io/posts/abc-142/</link>
			<pubDate>Sat, 12 Oct 2019 02:10:09 +0900</pubDate>
			
			<guid>https://shotanue.github.io/posts/abc-142/</guid>
			<description>AtCoder ABC142 CまでRustで解いた。 提出一覧 Rustになれるのはまだまだかかりそう。 A (N + 1 / 2) / Nで計算できるので、実装してやれば良いっぽい。 解説</description>
			<content type="html"><![CDATA[

<h2 id="atcoder-abc142">AtCoder ABC142</h2>

<p>CまでRustで解いた。
<a href="https://atcoder.jp/contests/abc142/submissions?f.Task=&amp;f.Language=&amp;f.Status=&amp;f.User=shotanue">提出一覧</a></p>

<p>Rustになれるのはまだまだかかりそう。</p>

<h2 id="a">A</h2>

<p><code>(N + 1 / 2) / N</code>で計算できるので、実装してやれば良いっぽい。</p>

<p>解説動画的には、この問題ではfloatを文字列に出力するときに、10桁くらい出すといいみたいな感じのことを言っていた。</p>

<h2 id="b">B</h2>

<p>N人の仲間たちを先頭から回して、Kcm以上の仲間を数えてあげる。</p>

<h2 id="c">C</h2>

<p>インデックスが出席番号で、値が到着した順番。
なので、値をインデックスにして、インデックス（出席番号）を値にした配列を作ればいいっぽい。</p>

<p>1-indexになっているのは注意が必要。</p>

<p>PHP的に、array_flipして、キーでソートすると完了な気がする。
Rustでは、同じことをどうやるのかわからないのと、型に慣れていないので変な実装になった。</p>
]]></content>
		</item>
		
		<item>
			<title>ことはじめ</title>
			<link>https://shotanue.github.io/posts/my-first-post/</link>
			<pubDate>Wed, 11 Sep 2019 23:54:49 +0900</pubDate>
			
			<guid>https://shotanue.github.io/posts/my-first-post/</guid>
			<description>あまりにgithub pagesが貧相だったので、hugoを導入してみた。 hugoにした理由は、 簡単そう。 どうも早いらしい。（記事をたくさん書</description>
			<content type="html"><![CDATA[

<p>あまりにgithub pagesが貧相だったので、hugoを導入してみた。</p>

<p>hugoにした理由は、</p>

<ul>
<li>簡単そう。</li>
<li>どうも早いらしい。（記事をたくさん書かないとあまりメリットはなさそうではある）</li>
</ul>

<p>みたいなところで選んだ。<br />
(Gatsbyもあるけど、ちょっと高級過ぎな気がしたのでやめた。もう少しWebアプリっぽいものを作るには良さそうな気はしているので、いつか触ってみたいとは思っている。)</p>

<p>ただ、hugoを導入したことで、Qiitaの技術記事とのバッティングはちょっと気になっている。まとまった文章垂れ流す上で「いいね」だったり「コメント」を気にしたくないのであればこっちのが良いと思うけど、
仮に技術記事書いて間違った知識を載せてしまった場合に指摘が入らなくなってしまうので。</p>

<p>Qiita書いて、個人のブログも書いててみたいな人がいたとして、どう出し分けしているのか。</p>

<h2 id="導入にあたって">導入にあたって</h2>

<p>hugoをチュートリアルで提示されているテーマをを無視して、いきなり好きなテーマを使ったらハマった。<br />
普通に<a href="https://gohugo.io/getting-started/quick-start/">チュートリアル</a>を進めればよかったのだけども、指定されたテーマを無視して<code>hermit</code>を入れると、ローカルサーバーを立ち上げた時点でこんなエラーが出る。</p>

<pre><code>Building sites … ERROR 2019/09/11 23:59:58 render of &quot;taxonomy&quot; failed: execute of template failed: template: _default/list.html:21:50: executing &quot;main&quot; at &lt;.Site.Params.dateformshort&gt;: invalid value; expected string
</code></pre>

<p>エラーメッセージ見てもよくわからなかったのでググってみると、同じテーマで同じ事象に遭遇している人がいたようで、<a href="https://github.com/Track3/hermit/blob/3f7461d95d107895b359fbe910aebde666ed01fc/exampleSite/config.toml#L28-L32">この設定が足りないよ</a>って<a href="https://discourse.gohugo.io/t/quick-start-error/17310">回答</a>があった。</p>

<p>テーマによっては変数みたいなのを設定ファイル(config.toml)で追加指定必須らしい。
（なんとなくテンプレート側で参照してる箇所を消せばそれはそれで解消できそうだけど）</p>

<p>ということで無事hugoが導入できた。</p>

<p>あと他では、Netlifyとかにホストできるらしいけど、ドメイン取ったりがめんどくさい、お金かかる、ので当分github pagesで運用してみる。</p>
]]></content>
		</item>
		
	</channel>
</rss>
